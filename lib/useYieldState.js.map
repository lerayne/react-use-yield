{"version":3,"sources":["../src/useYieldState.mjs"],"names":["useYieldState","stateChanger","deps","initialState","state","run","memoizedStateChanger","abortController","abort"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;;;;;;;;;;;;;;;AAEA;AACe,SAASA,aAAT,CAAwBC,YAAxB,EAAsCC,IAAtC,EAA4CC,YAA5C,EAA0D;AACvE,kBAAqB,2BAASA,YAAT,CAArB;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,GAAd,iBADuE,CAGvE;AACA;AACA;AACA;;;AACA,MAAMC,oBAAoB,GAAG,wBAAYL,YAAZ,EAA0BC,IAA1B,CAA7B;AAEA,wBAAU,YAAM;AACd,QAAMK,eAAe,GAAGF,GAAG,CAACC,oBAAD,CAA3B;AACA,WAAO;AAAA,aAAMC,eAAN,aAAMA,eAAN,uBAAMA,eAAe,CAAEC,KAAjB,EAAN;AAAA,KAAP;AACD,GAHD,EAGG,CAACH,GAAD,EAAMC,oBAAN,CAHH;AAKA,SAAOF,KAAP;AACD","sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport { useCallback, useEffect } from 'react'\n\nimport useYield from './useYield'\n\n// wrapper that runs in the same way as useAbortableGenerator\nexport default function useYieldState (stateChanger, deps, initialState) {\n  const [state, run] = useYield(initialState)\n\n  // this is the only place when we need to disable a rule, because this is basically a\n  // useEffect wrapper: stateChanger is evaluated on external deps change\n  //\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedStateChanger = useCallback(stateChanger, deps)\n\n  useEffect(() => {\n    const abortController = run(memoizedStateChanger)\n    return () => abortController?.abort()\n  }, [run, memoizedStateChanger])\n\n  return state \n}\n"],"file":"useYieldState.js"}