{"version":3,"sources":["../src/useYield.mjs"],"names":["useYield","initialState","Object","Error","state","_","setCounter","getState","current","updateState","value","signal","aborted","newState","c","run","stateChanger","options","abortController","abortable","window","AbortController","pull","asyncGenerator","onYield","done","next","then","stateChangerResult","action","result"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport { useCallback, useRef, useState } from 'react'\nimport fastDeepEqual                     from 'fast-deep-equal/es6'\n\nexport default function useYield (initialState) {\n  if (!(typeof initialState === 'object' && initialState instanceof Object)) {\n    throw new Error('useYield only accepts object as initialState')\n  }\n\n  const state = useRef(initialState)\n  // setCounter is used here only to force a render\n  // eslint-disable-next-line react/hook-use-state,id-match\n  const [_, setCounter] = useState(0)\n\n  const getState = useCallback(() => ({ ...state.current }), [state])\n\n  const updateState = useCallback((value, signal = null) => {\n    // it's important to return the same object, if no changes to the state was made, in this\n    // way other hooks can use this state as a respectful dependency\n    if (signal && signal.aborted) {\n      return state.current\n    }\n\n    const newState = { ...state.current, ...value }\n    if (fastDeepEqual(state.current, newState)) {\n      return state.current\n    }\n\n    // this call causes re-render and returns new object only if states are different\n    state.current = newState\n    setCounter(c => c + 1)\n\n    return newState\n  }, [state])\n\n  // this function is always the same, so it's safe to include it into deps\n  const run = useCallback((stateChanger, options) => {\n    const abortController = options?.abortable ?? new window.AbortController()\n\n    function pull (asyncGenerator) {\n      function onYield ({ done, value }) {\n        if (!done) {\n          updateState(value, abortController.signal)\n          asyncGenerator.next().then(onYield)\n        }\n      }\n\n      asyncGenerator.next().then(onYield)\n    }\n\n    const stateChangerResult = stateChanger(getState, abortController.signal, options.action)\n\n    if (stateChangerResult.next) {\n      // if generator is passed as stateChanger\n      pull(stateChangerResult)\n      return abortController\n    } else if (stateChangerResult.then) {\n      // if regular async function is passed as stateChanger\n      stateChangerResult.then(result => {\n        updateState(result, abortController.signal)\n      })\n      return abortController\n    } else {\n      // if stateChanger is a regular function\n      updateState(stateChangerResult)\n      return null\n    }\n  }, [getState, updateState])\n\n  return [state.current, run]\n}\n"],"file":"useYield.js"}